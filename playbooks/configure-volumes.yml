---
- name: Format and mount additional ec2 volumes after the instance is first created
  hosts: localhost
  connection: local
  gather_facts: true
  become: no
  roles: []
  tasks:
    - name: Find our own instance ID. There is a better way to do this, but it requires ansible more modern than 2.9
      shell: /usr/bin/curl -s http://169.254.169.254/latest/meta-data/instance-id
      register: instance_id_result
      changed_when: False

    - name: debug instance_id_result
      debug:
          var: instance_id_result

    - set_fact:
        instance_id: "{{ instance_id_result.stdout_lines[0]|trim() }}"

    - assert:
        that:
          - (instance_id | length) == 19
          - instance_id.startswith("i-")

    - name: Gather the rest of the instance info
      ec2_instance_info:
        region: "{{ aws_region }}"
        instance_ids:
          - "{{ instance_id }}"
      register: ec2_facts

    - name: Get volume info
      set_fact:
        block_device_mappings: "{{ ec2_facts.instances[0].block_device_mappings }}"

    - name: debug block_device_mappings
      debug:
          var: block_device_mappings

    - name: Filter out root volume from block_device_mappings
      set_fact:
        block_device_mappings: "{{ block_device_mappings | rejectattr('device_name', 'equalto', '/dev/xvda') | list }}"

    - name: Get volume IDs from secondary volumes
      set_fact:
          volume_ids: "{{ block_device_mappings | map(attribute='ebs.volume_id') | list }}"

    - name: Collect volume info
      ec2_vol_info:
        filters:
          region: "{{ aws_region }}"
          volume_ids:
            - "{{ volume_ids }}"
      register: volume_info

    - name: Debug volume_info
      debug:
          var: volume_info
#    - include_tasks: ./include/configure_volume.yml
#      loop: "{{ volumes }}"
#      loop_control:
#        loop_var: volume
